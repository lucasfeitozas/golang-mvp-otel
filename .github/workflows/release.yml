name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

env:
  GO_VERSION: '1.21'
  DOCKER_REGISTRY: ghcr.io

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build Service A binary
      working-directory: ./service-a
      run: |
        CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o service-a .
        CGO_ENABLED=0 GOOS=darwin go build -a -installsuffix cgo -o service-a-darwin .
        CGO_ENABLED=0 GOOS=windows go build -a -installsuffix cgo -o service-a.exe .

    - name: Build Service B binary
      working-directory: ./service-b
      run: |
        CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o service-b .
        CGO_ENABLED=0 GOOS=darwin go build -a -installsuffix cgo -o service-b-darwin .
        CGO_ENABLED=0 GOOS=windows go build -a -installsuffix cgo -o service-b.exe .

    - name: Build and push Service A Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./service-a
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/service-a:${{ steps.version.outputs.version }}
          ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/service-a:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Service B Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./service-b
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/service-b:${{ steps.version.outputs.version }}
          ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/service-b:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "changelog=Release ${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        body: |
          ## ðŸš€ Release ${{ steps.version.outputs.version }}
          
          ### ðŸ“¦ Docker Images
          - `${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/service-a:${{ steps.version.outputs.version }}`
          - `${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/service-b:${{ steps.version.outputs.version }}`
          
          ### ðŸ“‹ Changes
          ${{ steps.changelog.outputs.changelog }}
          
          ### ðŸ”§ Installation
          ```bash
          # Clone the repository
          git clone https://github.com/${{ github.repository }}.git
          cd golang-mvp-otel
          
          # Checkout this version
          git checkout ${{ steps.version.outputs.version }}
          
          # Run with Docker Compose
          docker-compose up -d
          ```
        files: |
          service-a/service-a
          service-a/service-a-darwin
          service-a/service-a.exe
          service-b/service-b
          service-b/service-b-darwin
          service-b/service-b.exe
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}